# Production Environment Template
# ==============================
# Copy this file to .env.production and fill in your actual values
# WARNING: Never commit .env.production to version control!
# Generated on: 2024-12-19

# =============================================================================
# SECURITY KEYS (GENERATE NEW KEYS FOR EACH DEPLOYMENT)
# =============================================================================
# Run: python scripts/generate_production_keys.py to generate secure keys
SECRET_KEY=your-secret-key-here
JWT_SECRET_KEY=your-jwt-secret-key-here

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================
FLASK_ENV=production
ENVIRONMENT=production
DEBUG=false
TESTING=false

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL Database URL (replace with your actual database credentials)
# Format: postgresql://username:password@host:port/database_name
DATABASE_URL=postgresql://username:password@localhost:5432/database_name

# Database Connection Pool Settings
DB_POOL_SIZE=20
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600
DB_MAX_OVERFLOW=30

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Redis URL for Celery broker and result backend
# Format: redis://[password@]host:port/db_number
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Redis Connection Settings
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# =============================================================================
# JWT CONFIGURATION
# =============================================================================
# JWT token expiration times (in seconds)
JWT_ACCESS_TOKEN_EXPIRES=3600
JWT_REFRESH_TOKEN_EXPIRES=2592000
JWT_ALGORITHM=HS256

# JWT Cookie Settings
JWT_COOKIE_CSRF_PROTECT=true
JWT_ACCESS_COOKIE_NAME=access_token_cookie
JWT_REFRESH_COOKIE_NAME=refresh_token_cookie

# =============================================================================
# CORS AND SECURITY
# =============================================================================
# Allowed origins for CORS (replace with your actual domains)
# Separate multiple domains with commas
CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# CORS Additional Settings
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOW_HEADERS=Content-Type,Authorization,X-Requested-With
CORS_EXPOSE_HEADERS=Content-Type,Authorization
CORS_SUPPORTS_CREDENTIALS=true
CORS_MAX_AGE=3600

# Security headers
SECURE_HEADERS=true
STRICT_TRANSPORT_SECURITY=true
HSTS_MAX_AGE=max-age=31536000; includeSubDomains
CONTENT_SECURITY_POLICY=true
CSP_POLICY=default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================
# Sentry DSN for error monitoring (optional but recommended for production)
# Get this from your Sentry project settings
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Application version
APP_VERSION=1.0.0

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================
# SMTP settings for email notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_USE_TLS=true

# =============================================================================
# FILE STORAGE
# =============================================================================
# File upload settings
MAX_CONTENT_LENGTH=16777216
UPLOAD_FOLDER=uploads
ALLOWED_EXTENSIONS=txt,pdf,png,jpg,jpeg,gif,doc,docx,xls,xlsx

# =============================================================================
# RATE LIMITING
# =============================================================================
# Rate limiting configuration
RATE_LIMIT_ENABLED=true
RATE_LIMIT_DEFAULT=200 per day, 50 per hour
RATE_LIMIT_STORAGE_URL=redis://localhost:6379/1

# =============================================================================
# CELERY CONFIGURATION
# =============================================================================
# Celery worker settings
CELERY_WORKER_CONCURRENCY=4
CELERY_TASK_TIME_LIMIT=1800
CELERY_TASK_SOFT_TIME_LIMIT=1500
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_TIMEZONE=UTC
CELERY_WORKER_PREFETCH_MULTIPLIER=1
CELERY_WORKER_MAX_TASKS_PER_CHILD=1000

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================
# Google Forms API (if using Google Forms integration)
GOOGLE_FORMS_API_KEY=your-google-api-key
GOOGLE_FORMS_CLIENT_ID=your-google-client-id
GOOGLE_FORMS_CLIENT_SECRET=your-google-client-secret

# =============================================================================
# BACKUP AND MAINTENANCE
# =============================================================================
# Backup settings
BACKUP_ENABLED=true
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_PATH=/backups

# Maintenance mode
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE=System is under maintenance. Please try again later.

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================
# 1. Generate new secret keys for each deployment
# 2. Update database credentials with production values
# 3. Configure Redis connection details
# 4. Set up proper CORS origins for your domains
# 5. Configure monitoring and logging
# 6. Test configuration in staging before production
# 7. Keep this file secure and never commit to version control
